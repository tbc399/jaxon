package templates

import (
	"fmt"
	"jaxon.app/jaxon/internal/transaction/models"
	"github.com/dustin/go-humanize"
)

func styleAmount(amount int) string {
	style := "flex h-full items-start text-sm font-medium"
	if amount > 0 {
		return style + " text-teal-700"
	}
	return style + " dark:text-gray-100"
}

templ transactionListItem(transaction models.TransactionView) {
	<div
		hx-get={ string(templ.URL(fmt.Sprintf("/transactions/%s/edit", transaction.Id))) }
        hx-push-url={ fmt.Sprintf("/transactions/%s", transaction.Id) }
		hx-swap="none"
		id={ fmt.Sprintf("tran_%s", transaction.Id) }
		class="flex flex-row justify-between dark:hover:bg-slate-800/50 w-full rounded-2xl px-3 py-3"
	>
        <div class="flex flex-col gap-y-0.5">
            <div class="whitespace-nowrap dark:text-gray-100 overflow-ellipsis overflow-x-hidden text-sm font-semibold">
                { transaction.Description }
            </div>
            <div class="whitespace-nowrap dark:text-gray-400 font-normal text-sm">
                if transaction.CategoryName.Valid {
                    { transaction.CategoryName.String }
                } else {
                    Uncategorized
                }
            </div>
        </div>
        <div class="flex items-start h-full">
            <div class={ styleAmount(transaction.Amount) }>
                <span class="w-full flex justify-end">
                    if transaction.Amount > 0 {
                        +${ fmt.Sprint(humanize.FormatFloat("", float64(transaction.Amount) / 100.0)) }
                    } else {
                        -${ fmt.Sprint(humanize.FormatFloat("", float64(transaction.Amount) / 100.0 * -1)) }
                    }
                </span>
            </div>
        </div>
	</div>
}
