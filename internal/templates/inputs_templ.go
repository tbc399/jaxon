// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.833
package templates

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import "fmt"

type Selectable interface {
	GetId() string
	GetName() string
}

func Dropdown[T Selectable](selections []T, idPrefix string) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<select data-hs-select=\"{\n      &#34;placeholder&#34;: &#34;Select&#34;,\n      &#34;toggleTag&#34;: &#34;&lt;button type=\\&#34;button\\&#34; aria-expanded=\\&#34;false\\&#34;&gt;&lt;/button&gt;&#34;,\n      &#34;toggleClasses&#34;: &#34;hs-select-disabled:pointer-events-none hs-select-disabled:opacity-50 relative py-1.5 ps-4 pe-9 flex gap-x-2 text-nowrap w-full cursor-pointer bg-neutral rounded-md text-start text-xs font-medium text-base-content focus:outline-none focus:ring-2 focus:ring-gray-800&#34;,\n      &#34;dropdownClasses&#34;: &#34;mt-1 z-50 w-full max-h-72 p-1 space-y-0.5 bg-white border border-gray-200 rounded-lg overflow-hidden overflow-y-auto [&amp;::-webkit-scrollbar]:w-2 [&amp;::-webkit-scrollbar-thumb]:rounded-full [&amp;::-webkit-scrollbar-track]:bg-gray-100 [&amp;::-webkit-scrollbar-thumb]:bg-gray-300 dark:[&amp;::-webkit-scrollbar-track]:bg-neutral-700 dark:[&amp;::-webkit-scrollbar-thumb]:bg-neutral-500 dark:bg-neutral-900 dark:border-neutral-700&#34;,\n      &#34;optionClasses&#34;: &#34;py-2 px-4 w-full text-sm text-gray-800 cursor-pointer hover:bg-gray-100 rounded-lg focus:outline-none focus:bg-gray-100 hs-select-disabled:pointer-events-none hs-select-disabled:opacity-50 dark:bg-neutral-900 dark:hover:bg-neutral-800 dark:text-neutral-200 dark:focus:bg-neutral-800&#34;,\n      &#34;optionTemplate&#34;: &#34;&lt;div class=\\&#34;flex justify-between items-center w-full\\&#34;&gt;&lt;span data-title&gt;&lt;/span&gt;&lt;span class=\\&#34;hidden hs-selected:block\\&#34;&gt;&lt;svg class=\\&#34;shrink-0 size-3.5 text-blue-600 dark:text-blue-500 \\&#34; xmlns=\\&#34;http:.w3.org/2000/svg\\&#34; width=\\&#34;24\\&#34; height=\\&#34;24\\&#34; viewBox=\\&#34;0 0 24 24\\&#34; fill=\\&#34;none\\&#34; stroke=\\&#34;currentColor\\&#34; stroke-width=\\&#34;2\\&#34; stroke-linecap=\\&#34;round\\&#34; stroke-linejoin=\\&#34;round\\&#34;&gt;&lt;polyline points=\\&#34;20 6 9 17 4 12\\&#34;/&gt;&lt;/svg&gt;&lt;/span&gt;&lt;/div&gt;&#34;,\n      &#34;extraMarkup&#34;: &#34;&lt;div class=\\&#34;absolute top-1/2 end-3 -translate-y-1/2\\&#34;&gt;&lt;svg viewBox=\\&#34;0 0 24 24\\&#34; class=\\&#34;size-3 stroke-[1.5px] fill-none stroke-base-content\\&#34;&gt;&lt;path stroke-linecap=\\&#34;round\\&#34; stroke-linejoin=\\&#34;round\\&#34; d=\\&#34;m19.5 8.25-7.5 7.5-7.5-7.5\\&#34; /&gt;&lt;/svg&gt;&lt;/div&gt;&#34;\n    }\" class=\"hidden\"><option value=\"\">Choose</option> ")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		for _, selection := range selections {
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, "<option id=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var2 string
			templ_7745c5c3_Var2, templ_7745c5c3_Err = templ.JoinStringErrs(fmt.Sprintf("%s_%s", idPrefix, selection.GetId()))
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `internal/templates/inputs.templ`, Line: 25, Col: 74}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var2))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 3, "\" value=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var3 string
			templ_7745c5c3_Var3, templ_7745c5c3_Err = templ.JoinStringErrs(selection.GetId())
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `internal/templates/inputs.templ`, Line: 25, Col: 102}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var3))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 4, "\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var4 string
			templ_7745c5c3_Var4, templ_7745c5c3_Err = templ.JoinStringErrs(selection.GetName())
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `internal/templates/inputs.templ`, Line: 25, Col: 126}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var4))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 5, "</option>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 6, "</select>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
